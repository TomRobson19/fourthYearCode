#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\begin_preamble
\date{}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 2cm
\headsep 2cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Advanced Computer Vision Summative Assignment - Visual Odometry
\end_layout

\begin_layout Author
hzwr87
\end_layout

\begin_layout Section*
Pre-processing
\end_layout

\begin_layout Standard
Following an examination of the dataset, the first decision that was made
 was to remove the lower part of the images, as this contained the bonnet
 of the car and its shadow, which would have features that would either
 not move or move differently to the rest of the features in the image,
 leading to confusing results.
\end_layout

\begin_layout Section*
Feature Extraction and Matching
\end_layout

\begin_layout Standard
The approach chosen for this implementation of visual odometry was monocular
 odometry.
 The initial approach taken used a SURF feature detector, and the OpenCV
 Flann based matcher to correlate features between the current and previous
 images.
 However, the results using this approach were quite poor and slow to run.
 Therefore, taking inspiration from the example provided, the feature detector
 was changed to use sparse Optical Flow, using the Lucas-Kanade algorithm.
 This is backed up by the OpenCV implementation of the FAST feature detector,
 which is used when the number of matching features that the optical flow
 algorithm finds is insufficient.
 When this number of features is deemed insufficient is one of the tunable
 parameters associated with this implementation.
 When the FAST feature detector is used, the features are placed into bins
 in order to prevent features becoming too concentrated in a specific area.
 
\end_layout

\begin_layout Standard
The scale, or approximate number of meters moved between images, is calculated
 from the ground truth GPS data.
 To try and cut down on the number of erroneous results and the number of
 unnecessary computations, we ignore any images with a very small scale
 value, as this indicates that the car has not moved very far, and is most
 likely stationary in traffic, following examination of the dataset.
 
\end_layout

\begin_layout Standard
Another important consideration is to only include results where there s
 a significant forward component to the translation vector.
 One of the reasons that this has been implemented is possible interpretations
 of sideways or backwards motion caused by cars travelling in the other
 direction.
 The reason that we do not require the forward motion to be dominant, just
 significant, is that we still want to be able to recognise when the car
 is going round a corner, but ignore erroneous readings, many of which have
 negative forward components.
 The interpretation of significant was determined by experimentation.
\end_layout

\begin_layout Section*
Performance
\end_layout

\begin_layout Standard
The performance of this system has been evaluated in several different ways.
 The first of these was using a matplotlib graph to try and compare the
 shape of this implementation to that of the ground truth GPS data.
 The purpose of this was to assist early in development and determine if
 the shape of the trajectory that the odometry was finding was sufficiently
 close to the shape of the ground truth data, particularly for determining
 how it handled difficult parts of the dataset.
 
\end_layout

\begin_layout Standard
The second evaluation method was to convert all of the translations given
 by this implementation back into GPS points and overlay them on a map of
 Durham, along with the ground truth data, to determine whether the path
 that the system had found was accurate.
 
\end_layout

\begin_layout Standard
The final method of evaluation implemented here was to correct the results
 of the odometry when it strayed too far from the corresponding ground truth
 point.
 The number of corrections necessary gives an indication of the quality
 of the odometry implementation, as well as an indication of the relative
 difficulty of the sections of the dataset.
 
\end_layout

\end_body
\end_document
